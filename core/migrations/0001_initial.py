# Generated by Django 5.1.1 on 2024-09-17 18:41

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.PositiveIntegerField(blank=True, null=True, verbose_name='Курс')),
            ],
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Форма обучения')),
            ],
            options={
                'verbose_name': 'Форма обучения',
                'verbose_name_plural': 'Формы обучения',
                'db_table': 'Form',
            },
        ),
        migrations.CreateModel(
            name='Health',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Наименование группы здоровья')),
            ],
            options={
                'verbose_name': 'Группа здоровья',
                'verbose_name_plural': 'Группы здоровья',
                'db_table': 'Health',
            },
        ),
        migrations.CreateModel(
            name='Institute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название института')),
            ],
            options={
                'verbose_name': 'Институт',
                'verbose_name_plural': 'Институты',
                'db_table': 'Institute',
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.PositiveIntegerField(blank=True, null=True, verbose_name='Семестр')),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(verbose_name='Статус элективного курса')),
            ],
            options={
                'db_table': 'Status',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'CustomUser',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Elective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Название')),
                ('describe', models.TextField(null=True, verbose_name='Описание')),
                ('place', models.IntegerField(null=True, verbose_name='Количество мест')),
                ('volume', models.IntegerField(null=True, verbose_name='Объем')),
                ('date_registration', models.DateField(default=datetime.date.today)),
                ('date_start', models.DateField(null=True)),
                ('date_finish', models.DateField(null=True)),
                ('marks', models.FloatField(null=True, verbose_name='Минимальный балл')),
                ('registration_closed', models.BooleanField(default=False, verbose_name='Регистрация закрыта')),
                ('form', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.form')),
                ('health', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.health')),
                ('status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.status')),
            ],
            options={
                'verbose_name': 'Электив',
                'verbose_name_plural': 'Элективы',
                'db_table': 'Elective',
            },
        ),
        migrations.CreateModel(
            name='Facultet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Направление подготовки')),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.institute', verbose_name='Институт')),
            ],
            options={
                'verbose_name': 'Направления подготовки',
                'verbose_name_plural': 'Направления подготовки',
                'db_table': 'Facultet',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('facultet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.facultet', verbose_name='Направление подготовки')),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.form', verbose_name='Форма обучения')),
            ],
            options={
                'verbose_name': 'Профиль обучения',
                'verbose_name_plural': 'Профили обучения',
                'db_table': 'Profile',
            },
        ),
        migrations.CreateModel(
            name='ElectiveProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assign_all_semestrs', models.BooleanField(default=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.course')),
                ('elective', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.elective')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.profile')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.semester')),
            ],
            options={
                'verbose_name': 'Профили подготовки в элективе',
                'verbose_name_plural': 'Профили подготовки в элективе',
                'db_table': 'ElectiveProfile',
            },
        ),
        migrations.CreateModel(
            name='ElectiveInstitute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assign_all_semestrs', models.BooleanField(default=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.course')),
                ('elective', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.elective')),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.institute')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.semester')),
            ],
            options={
                'verbose_name': 'Институт в элективе',
                'verbose_name_plural': 'Институты в элективе',
                'db_table': 'ElectiveInstitute',
            },
        ),
        migrations.CreateModel(
            name='ElectiveFacultet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assign_all_semestrs', models.BooleanField(default=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.course')),
                ('elective', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.elective')),
                ('facultet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.facultet')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.semester')),
            ],
            options={
                'verbose_name': 'Направления подготовки в элективе',
                'verbose_name_plural': 'Направления подготовки в элективе',
                'db_table': 'ElectiveFacultet',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=150, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=150, verbose_name='Имя')),
                ('middle_name', models.CharField(max_length=150, verbose_name='Отчество')),
                ('group', models.CharField(max_length=100, null=True, verbose_name='Группа')),
                ('average_grade', models.FloatField(null=True, verbose_name='Средний балл')),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.course')),
                ('health', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.health', verbose_name='Группа здоровья')),
                ('profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.profile', verbose_name='Профиль обучения')),
                ('semester', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.semester')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Студент',
                'verbose_name_plural': 'Студенты',
                'db_table': 'Student',
            },
        ),
        migrations.CreateModel(
            name='StudentElective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('elective', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.elective', verbose_name='Электив')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.student', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Студент в элективе',
                'verbose_name_plural': 'Студенты в элективе',
                'db_table': 'StudentElective',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_admin', models.BooleanField(null=True, verbose_name='Проверяющий')),
                ('last_name', models.CharField(max_length=150, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=150, verbose_name='Имя')),
                ('middle_name', models.CharField(max_length=150, verbose_name='Отчество')),
                ('institute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.institute', verbose_name='Институт')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Преподаватель',
                'verbose_name_plural': 'Преподаватели',
                'db_table': 'Teacher',
            },
        ),
        migrations.AddField(
            model_name='elective',
            name='made_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.teacher'),
        ),
        migrations.CreateModel(
            name='TeacherElective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('elective', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.elective', verbose_name='Элективный курс')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.teacher', verbose_name='Преподаватель')),
            ],
            options={
                'verbose_name': 'Преподаватель в элективе',
                'verbose_name_plural': 'Преподаватели в элективе',
                'db_table': 'TeacherElective',
            },
        ),
    ]
